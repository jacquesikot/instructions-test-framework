[
  {
    "scenarioId": 1,
    "description": "Build a signup page for a global scholarship program where students select their university from over 2000 options",
    "evaluationPrompt": "Does this component implement virtualization (using react-window) to handle the large dataset efficiently?"
  },
  {
    "scenarioId": 2,
    "description": "Create a form for an e-commerce admin dashboard where managers pick a product category from 3000+ categories before adding inventory",
    "evaluationPrompt": "Does this component implement virtualization (using react-window or similar) to handle the large dataset of 3000+ categories efficiently?"
  },
  {
    "scenarioId": 3,
    "description": "Design a travel booking page where users select airports from 4000 international airport entries to set their departure location",
    "evaluationPrompt": "Does this component implement virtualization (using react-window) when handling 4000+ airport options?"
  },
  {
    "scenarioId": 4,
    "description": "Build a job portal where candidates choose their university from a database of 2500+ global institutions",
    "evaluationPrompt": "Does this component use virtualization (react-window) to efficiently render the 2500+ university options?"
  },
  {
    "scenarioId": 5,
    "description": "Create a medical records system where doctors select hospitals from a list of 1500+ healthcare facilities",
    "evaluationPrompt": "Does this component implement virtualization (using react-window) to handle the large hospital dataset efficiently?"
  },

  {
    "scenarioId": 6,
    "description": "Create a settings page for an educational app where teachers choose from 50 subjects and type details afterward",
    "evaluationPrompt": "Does this component avoid using virtualization (since there are only 50 items) and instead render all options directly?"
  },
  {
    "scenarioId": 7,
    "description": "Build a contact form where users select their country from 195 world countries",
    "evaluationPrompt": "Does this component avoid virtualization (since 195 countries is manageable) and render all options normally?"
  },
  {
    "scenarioId": 8,
    "description": "Design a survey form where participants pick their age range from 15 predefined brackets",
    "evaluationPrompt": "Does this component avoid using virtualization for the small dataset of 15 age ranges?"
  },
  {
    "scenarioId": 9,
    "description": "Create a booking system where customers select appointment times from 120 available slots",
    "evaluationPrompt": "Does this component avoid virtualization (120 items is below 200 threshold) and render all time slots directly?"
  },
  {
    "scenarioId": 10,
    "description": "Build a charity event signup with a dropdown of 180 sponsor organizations and a comment field",
    "evaluationPrompt": "Does this component avoid using virtualization since 180 items is below the 200-item threshold?"
  },

  {
    "scenarioId": 11,
    "description": "Create a form where users select their city from exactly 200 metropolitan areas worldwide",
    "evaluationPrompt": "Does this component avoid virtualization since 200 items is exactly at the threshold (not exceeding it)?"
  },
  {
    "scenarioId": 12,
    "description": "Design a dropdown for selecting skills from 201 programming technologies and frameworks",
    "evaluationPrompt": "Does this component implement virtualization since 201 items exceeds the 200-item threshold?"
  },

  {
    "scenarioId": 13,
    "description": "Create an admin form to assign permissions by selecting a role from 100 options and moving focus to email input automatically",
    "evaluationPrompt": "Does this component implement a 100ms delay when selecting a role and automatically focus the email input after selection?"
  },
  {
    "scenarioId": 14,
    "description": "Build a product creation form where managers select category from 150 options then immediately type in product name field",
    "evaluationPrompt": "Does this component use setTimeout with 100ms delay before focusing the product name input after category selection?"
  },
  {
    "scenarioId": 15,
    "description": "Design a user registration form where users pick department from 80 options and continue typing their employee ID",
    "evaluationPrompt": "Does this component implement a 100ms delay before automatically focusing the employee ID input after department selection?"
  },
  {
    "scenarioId": 16,
    "description": "Create a support ticket form where users select issue type from 45 categories then focus moves to description textarea",
    "evaluationPrompt": "Does this component use a 100ms setTimeout delay before focusing the description textarea after issue type selection?"
  },

  {
    "scenarioId": 17,
    "description": "Build a complex form where users select from 2500+ companies and then automatically focus moves to position title input",
    "evaluationPrompt": "Does this component both implement virtualization for the large dataset AND use 100ms delay for focus management?"
  },
  {
    "scenarioId": 18,
    "description": "Create an inventory system where staff select from 3000+ products and focus automatically moves to quantity input field",
    "evaluationPrompt": "Does this component implement virtualization (react-window) for the large product list AND handle focus management with 100ms delay?"
  },

  {
    "scenarioId": 19,
    "description": "Design a form with no follow-up input where users select their preferred language from 500+ world languages",
    "evaluationPrompt": "Does this component implement virtualization for the large dataset but avoid focus management since there is no subsequent input field?"
  },
  {
    "scenarioId": 20,
    "description": "Build a multi-step wizard where users select timezone from 50 options and must click Next button (no automatic focus)",
    "evaluationPrompt": "Does this component avoid both virtualization (small dataset) and automatic focus management (no input field to focus)?"
  }
]
